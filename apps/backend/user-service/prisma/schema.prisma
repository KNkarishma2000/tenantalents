generator client {
  provider = "prisma-client-js"
}

// === DATABASE SOURCE ===
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//
// ENUMS
//

/// Defines all user roles in the platform (used for RBAC)
enum UserRole {
  buyer         // Regular customer who can browse and place orders
  seller        // Vendor with access to product listings
  admin         // Platform moderator with limited dashboard privileges
  super_admin   // Root-level admin for full platform control
}

/// Tracks the verification and onboarding status of a seller
enum SellerStatus {
  pending       // Awaiting admin approval (post-KYC)
  approved      // Seller approved and active on platform
  rejected      // Seller rejected due to invalid documents, etc.
}

//
// MODELS
//

/// Core user account for buyers, sellers, or admins
model User {
  id             String       @id @default(uuid())              // Unique identifier for each user
  email          String       @unique                           // Email address (used for login)
  name           String                                         // Display name or full name
  password       String                                         // Securely hashed password
  role           UserRole     @default(buyer)                   // Role assigned to the user
  phone          String?                                        // Optional phone number for OTP/2FA
  createdAt      DateTime     @default(now())                   // Created timestamp
  updatedAt      DateTime     @updatedAt                        // Automatically updated on change

  sellerProfile  Seller?      @relation("UserSeller")           // Optional: One-to-one seller profile (if role = seller)

  @@index([role])
  @@index([email])
}

/// Seller profile â€“ only created if a user signs up as a vendor
model Seller {
  id             String        @id @default(uuid())             // Unique seller ID
  userId         String        @unique                          // FK to the owning user account
  businessName   String                                         // Legal business/store name
  gstNumber      String?                                        // Optional: GSTIN or tax ID
  address        String?                                        // Optional: full postal address
  status         SellerStatus  @default(pending)                // Moderation status (handled by admin-service)
  kycDocsUrl     String[]      @default([])                     // Array of uploaded KYC documents (stored in MinIO)
  createdAt      DateTime      @default(now())                  // Timestamp when seller account was created
  updatedAt      DateTime      @updatedAt                       // Updated on KYC/profile change

  user           User          @relation("UserSeller", fields: [userId], references: [id]) // Link back to user
}
